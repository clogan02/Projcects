package main;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;

public class UI {
	GamePanel panel;
	Graphics2D g2;
	
	Font comicSans_40;
	public boolean showMessage = false;
	public boolean gameOver = false;
	public String message = "";
	public String outcome = "";
	public String dialogue = "";
	public int commandNum = 0;
	public int cardNumX = 0;
	public int cardNumY = 0;
	public int currCard = 0;
	public int cursorX = 0, cursorY = 0;
	int cardTimer = 0;
	int count = 0;
	int x, y;
	
	public UI (GamePanel panel) {
		this.panel = panel;
		comicSans_40 = new Font("Comic Sans", Font.PLAIN, 40);
	}
	
	public void showMessage(String text) {
		message = text;
		showMessage = true;
	}
	
	public void draw(Graphics2D g2) {
		this.g2 = g2;
		
		// title state
		if (panel.gameState == 0) {
			drawTitle();
		}
		// play state
		if (panel.gameState == 1) {
			
		}
		// pause state
		if (panel.gameState == 2) {
			drawPause();
		}
		// dialogue state
		if (panel.gameState == 3) {
			drawDialogue();
		}
		// matching game state
		if (panel.gameState == 4) {
			drawMatchingGame();
		}
		if (panel.gameState == 5) {
			drawGameOver();
			}
//			if (showMessage) {
//				g2.drawString(message, 50, 50);
//			}
//			
//			count++;
//			
//			if (count > 120) {
//				count = 0;
//				showMessage = false;
//			}
			
		} 
//		else {
//			g2.setFont(comicSans_40);
//			g2.setColor(Color.CYAN);
//			
//			// creates text and calculates the length for proper placement
//			String text = "Game Over! You " + outcome;
//			
//			x = getCenterX(text);
//			y = panel.height / 2;
//			
//			panel.gameThread = null;
//		}
	

	public void drawGameOver() {
		g2.setColor(new Color(0, 0, 0, 200));
		g2.fillRect(0, 0, panel.width, panel.height);
		
		g2.setColor(Color.red);
		g2.setFont(g2.getFont().deriveFont(Font.BOLD, 30F));
		message = "GAME OVER! YOU SAVED THE PRINCIPAL :) \n THANKS FOR PLAYING!";
		x = getCenterX(message);
		y = panel.tileSize * 4;
		g2.drawString(message, x, y);
		
		// return to title
		g2.setFont(g2.getFont().deriveFont(Font.BOLD, 25F));
		String text = "Retry";
		x = getCenterX(text);
		y += panel.tileSize * 4;
		g2.drawString(text, x, y);
		// quit game
		text = "Quit";
		x = getCenterX(text);
		y += 30;
		g2.drawString(text, x, y);
		
	}

	public void drawMatchingGame() {
		// background color
		drawSubWindow(0, 0, panel.width, panel.height, 25, 135, 39);
		// assigns 8 randomly ordered cards
		panel.cards.placeCards(g2);
		g2.setFont(g2.getFont().deriveFont(Font.BOLD, 30F));

		cardTimer++;
		
		if (cardTimer >= 300) {
			cursorY = (panel.height / 8) + (panel.tileSize * panel.ui.cardNumY * 8);
			cursorX = panel.tileSize + (panel.tileSize * panel.ui.cardNumX * 4);
			panel.cards.hideCards();
			g2.drawString("o", cursorX, cursorY);
		}
		
	}

	public void drawTitle() {
		// background color
		g2.setColor(new Color(131, 51, 255));
		g2.fillRect(0, 0, panel.width, panel.height);
		// title info
		g2.setFont(g2.getFont().deriveFont(Font.BOLD, 28F));
		String text = "Christian Logan's Steam Your Dreams Submission";
		int x = getCenterX(text);
		int y = panel.tileSize * 3;
		
		// adds a shadow to the text
		g2.setColor(Color.blue);
		g2.drawString(text, x + 2, y + 2);
		g2.setColor(Color.white);
		g2.drawString(text, x, y);
		
		// start menu
		
		g2.setFont(g2.getFont().deriveFont(Font.BOLD, 30F));
		
		text = "Start";
		x = getCenterX(text);
		y += panel.tileSize * 4;
		g2.drawString(text, x, y);	
		if (commandNum == 0) {
			g2.drawString(">", x - panel.tileSize, y);
		}
		
		text = "Info";
		x = getCenterX(text);
		y += panel.tileSize;
		g2.drawString(text, x, y);	
		if (commandNum == 1) {
			g2.drawString(">", x - panel.tileSize, y);
		}
		
		text = "Controls";
		x = getCenterX(text);
		y += panel.tileSize;
		g2.drawString(text, x, y);	
		if (commandNum == 2) {
			g2.drawString(">", x - panel.tileSize, y);
		}
		
		text = "Quit";
		x = getCenterX(text);
		y += panel.tileSize;
		g2.drawString(text, x, y);	
		if (commandNum == 3) {
			g2.drawString(">", x - panel.tileSize, y);
		}
	}

	public void drawPause() {
		
		// g2.setFont(g2.deriveFont(Font.PLAIN, 80F));
		String text = "PAUSED";
		x = getCenterX(text);
		y = panel.height / 2;
		
		g2.drawString(text, x, y);
	}
	
	public void drawDialogue() {
		// creates dialogue window
		int x = panel.tileSize * 2;
		int y = panel.tileSize / 2;
		int width = panel.width - (panel.tileSize * 4);
		int height = panel.tileSize * 4;
		drawSubWindow(x, y, width, height, 0, 0, 0);
		// shows dialogue inside set window
		g2.setFont(g2.getFont().deriveFont(Font.BOLD, 16F));
		x += panel.tileSize / 2 ;
		y += panel.tileSize;
		
		for(String line : dialogue.split("\n")) {
			g2.drawString(line, x, y);
			y += 40;
		}
	}	
	
	public void drawSubWindow(int x, int y, int width, int height, int r, int g, int b) {
		
		Color c = new Color(r, g, b);
		g2.setColor(c);
		
		g2.fillRoundRect(x, y, width, height, 35, 35);
		
		c = new Color(255, 255, 255);
		g2.setColor(c);
		g2.setStroke(new BasicStroke(10));
		g2.drawRoundRect(x, y, width, height, 25, 25);
	}
	
	public int getCenterX(String text) {
		int textLength = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();

		x = (panel.width / 2) - (textLength / 2);
		
		return x;
	}
}
